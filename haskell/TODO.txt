- Document everything!
- Handle all of the sections marked "TODO" in the code
- Add an entry to Makefile for bin/symdat
- Add a Makefile for dev/ and tests/
- Implement all of the features in plan.txt
 - Features that the Haskell version is behind on:
  - subgroups as a group type
  - converting elements to strings
  - creating arbitrary elements of given groups (cf. `mkelem` in dev/misc.hs)
  - testing whether a given function is a valid homomorphism
  - calculating left & right cosets of groups
  - generalized dihedral groups
- Make dev/lattice.hs use `Subset`s instead of `IntSet`s
- Idea: Get rid of `Groups.hs` and the re-exporting parts of `Types.hs`, and
  then rename the functions in `Group.hs`, `Element.hs`, `Subset.hs`, &
  `Ops.hs` so that they all use the same (conflicting) names for the same
  things
 - Rename both `Element.getGroup` and `Subset.getGroup` to just `group`
 - Rename `Element.getGroup'` to `getGroup`?
- Consider giving Element an Ix instance that yields nonempty lists only when
  the groups of the bounds match; this will then make it possible to implement
  a group table function with type `Group -> Array (Element, Element) Element`
- Actually make the `Group`, `Element`, and `Subset` constructors private
- Ops.hs: Make `norms` and `centers` take `Element`s intead of `Int`s
- Element.hs: Add a function for constructing from an `Int`
- Add a function for testing whether a given Subset is normal within another
  Subset?
- Replace the "undefined"s in Families.hs with descriptive error messages
- Subset.hs: Add a `map` function (or at least something for multiplying by an
  element)
- Make Groups.hs re-export Subgroups.hs?
- Add a function for generating the Cayley table of a given group
- Replace permutation groups with subgroups of symmetric groups
