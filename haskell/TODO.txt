- Document everything!
- Handle all of the sections marked "TODO" in the code
- Add a Makefile for dev/ and tests/
- Implement all of the features in plan.txt
 - Features that the Haskell version is behind on:
  - Converting elements to strings
  - Creating arbitrary elements of given groups (cf. `mkelem` in dev/misc.hs)
- Prefix the `Group`, `Element`, and `Subset` constructors with "Mk"?
- Make Subgroups.hs use `Subset`s instead of `IntSet`s
- Idea: Get rid of `Groups.hs` and the re-exporting parts of `Types.hs`, and
  then rename the functions in `Group.hs`, `Element.hs`, `Subset.hs`, &
  `Ops.hs` so that they all use the same (conflicting) names for the same
  things
- Consider giving Element an Ix instance that yields nonempty lists only when
  the groups of the bounds match; this will then make it possible to implement
  a group table function with type `Group -> Array (Element, Element) Element`
- Actually make the `Group`, `Element`, and `Subset` constructors private
- Rename both `Element.getGroup` and `Subset.getGroup` to just `group`?
 - Rename `Element.getGroup'` to `getGroup`?
- Ops.hs: Make `norms` and `centers` take `Element`s intead of `Int`s
- Element.hs: Add a function for constructing from an `Int`
- Add a function for testing whether a given Subset is normal within another
  Subset
- Give Permutation an Ix instance?
