- Document everything!
- Handle all of the sections marked "TODO" in the code
- Add a Makefile for dev/ and tests/
- Implement all of the features in plan.txt
 - Features that the Haskell version is behind on:
  - Converting elements to strings
  - Creating arbitrary elements of given groups (cf. `mkelem` in dev/misc.hs)
- Implement the following in Groups/Types/Subset.hs:
 - fromIntSet :: Group -> IntSet -> Subset
 - conversion from [Int]
- Prefix the `Group`, `Element`, and `Subset` constructors with "Mk"?
- Make most(?) of the functions in `Ops.hs` that use `[Element]`s use `Subset`s
  instead
- Idea: Get rid of `Groups.hs` and the re-exporting parts of `Types.hs`, and
  then rename the functions in `Group.hs`, `Element.hs`, `Subset.hs`, &
  `Ops.hs` so that they all use the same (conflicting) names for the same
  things
- Consider giving Element an Ix instance that yields nonempty lists only when
  the groups of the bounds match; this will then make it possible to implement
  a group table function with type `Group -> Array (Element, Element) Element`
- Actually make the `Group`, `Element`, and `Subset` constructors private
- Rename the `getGroup` functions (excluding Element.getGroup'?) to just
  `group`?
